const Discord = require('discord.js');
const bot = new Discord.Client();
const request = require('request');
const config = require('./botconfig.json');
const token = config.token;
const prefix = config.prefix;
const apiKey = '9552deb6aed115532d3abdc34e24d985';
const city = 'volgograd';
const url = `http://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&lang=RU&appid=${apiKey}`;
const express = require("express");
const path = require('path');
const PORT = process.env.PORT || 5000;

let http = require("http");
setInterval(function() {
    http.get("http://morning-plateau-45402.herokuapp.com");
}, 300000);

express()
  .use(express.static(path.join(__dirname, 'public')))
  .set('views', path.join(__dirname, 'views'))
  .set('view engine', 'ejs')
  .get('/', (req, res) => res.render('pages/index'))
  .listen(PORT, () => console.log(`Listening on ${PORT}`))
  
//—Å–æ–∑–¥–∞—ë–º —Å—Å—ã–ª–∫—É-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –¥–ª—è –±–æ—Ç–∞
bot.on('ready', () => {
    console.log(`–ó–∞–ø—É—Å—Ç–∏–ª—Å—è –±–æ—Ç ${bot.user.username}`);
    bot.generateInvite(["ADMINISTRATOR"]).then(link => {
    });
});

bot.on('message', async msg => {
    if (msg.content.search(`${prefix}[–üO–ì–û–î–ê–ø–æ–≥–æ–¥–∞OoAa]+$`) > -1 && msg.author.bot === false) {
        request(url, function (err, response, body) {
            if(err){
                console.log('–æ—à–∏–±–∫–∞');
            } else {
                let data = JSON.parse(body);
                console.log(data);
                let data2 = data.weather.find(item => item.id);
                let temp = Math.floor(data.main.temp);
                if (data2.description == '—è—Å–Ω–æ') {
                    msg.channel.send(`\`\`\`–°–µ–≥–æ–¥–Ω—è –≤ –£—Å—Ç—å-–ü–∞—Ä–∞—à–∏–Ω—Å–∫–µ ‚òÄÔ∏è${data2.description}‚òÄÔ∏è\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç üî•${temp} –≥—Ä–∞–¥—É—Å–æ–≤ –¶–µ–ª—å—Å–∏—èüî•\n–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ üí®${data.wind.speed} –º–µ—Ç—Ä–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—Éüí®.\`\`\``);
                }
                if (data2.description.includes('–æ–±–ª–∞')) {
                    msg.channel.send(`\`\`\`–°–µ–≥–æ–¥–Ω—è –≤ –£—Å—Ç—å-–ü–∞—Ä–∞—à–∏–Ω—Å–∫–µ ‚õÖ${data2.description}‚õÖ\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç üî•${temp} –≥—Ä–∞–¥—É—Å–æ–≤ –¶–µ–ª—å—Å–∏—èüî•\n–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ üí®${data.wind.speed} –º–µ—Ç—Ä–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—Éüí®.\`\`\``);
                }
                if (data2.description.includes('–¥–æ–∂–¥—å')) {
                    msg.channel.send(`\`\`\`–°–µ–≥–æ–¥–Ω—è –≤ –£—Å—Ç—å-–ü–∞—Ä–∞—à–∏–Ω—Å–∫–µ üåßÔ∏è${data2.description}üåßÔ∏è\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç üî•${temp} –≥—Ä–∞–¥—É—Å–æ–≤ –¶–µ–ª—å—Å–∏—èüî•\n–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ üí®${data.wind.speed} –º–µ—Ç—Ä–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—Éüí®.\`\`\``);
                }
            }
          }); 
    }
    let shablon = msg.content.split('');
    if (msg.content.search(`${prefix}[–®–ê–ë–õ–û–ù—à–∞–±–ª–æ–ΩAaOoHh]+$`) && shablon.length >= 4) {
        msg.channel.send(`\'ttr russian –î–æ–±—Ä—ã–π –¥–µ–Ω—å. –° –≤–∞–º–∏ –≤–µ–¥—É—â–∞—è –Ω–æ–≤–æ—Å—Ç–µ–π –í–∏–ª–∏–≥—É–ª—å–º–∞. –°–µ–≥–æ–¥–Ω—è –≤ –Ω–∞—à—É —Ä–µ–¥–∞–∫—Ü–∏—é –ø–æ—Å—Ç—É–ø–∏–ª–æ –∫—Ä–∞–π–Ω–µ –æ–ø–µ—á–∞–ª–∏–≤–∞—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞ –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ –í–ª–∞–¥–∏–º–∏—Ä–∞ –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—á–∞ –ü—É—Ç–∏–Ω–∞. –í –Ω–µ–º —Å–∫–∞–∑–∞–Ω–æ, —á—Ç–æ –°–æ–µ–¥–∏–Ω–µ–Ω–Ω—ã–µ –®—Ç–∞—Ç—ã –ê–º–µ—Ä–∏–∫–∏ –±–µ–∑ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –Ω–∞–ø–∞–ª–∏ –Ω–∞ –£—Å—Ç—å-–ü–∞—Ä–∞—à–∏–Ω—Å–∫ —Ä–æ–≤–Ω–æ –≤ 4:20 —É—Ç—Ä–∞. –ü–æ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–º –¥–∞–Ω–Ω—ã–º, —Ç—Ä–µ—Ç—å—è –º–∏—Ä–æ–≤–∞—è –≤–æ–π–Ω–∞ –Ω–∞—á–∞–ª–∞—Å—å –∏–∑-–∑–∞ –Ω–µ–∫–æ–≥–æ ${shablon[0]} ${shablon[1]} –ø–æ –∫–ª–∏—á–∫–µ ${shablon[2]}. –≠—Ç–æ—Ç ${shablon[3]} –º–∞—Ö–∏–Ω–∞—Ç–æ—Ä –≤–æ –≤—Ä–µ–º—è —Å–≤–æ–µ–π –∏–≥—Ä—ã –≤ –¥–æ—Ç–µ –∑–∞–∫–∏–Ω—É–ª –≤—Å—é –ø–∞—á–∫—É —Å–Ω—é—Å–∞ –ø–æ–¥ –≥—É–±—É`)
    }
    console.log(msg.author.username + ' (' + msg.author.id + ') ' + ': ' + msg.content);
});
bot.login(token);





